/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * view_issued_books.java
 *
 * Created on 14 Jul, 2015, 9:40:37 AM
 */

package library_management;

/**
 *
 * @author abhilasha
 */import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class view_issued_books extends javax.swing.JFrame {
  Connection conn;
Statement stmt;
ResultSet rs;
String arr[]=new String[100];
String id;
    /** Creates new form view_issued_books */
    public view_issued_books(String a) {
        initComponents();
        id=a;
         validate();
        setSize(1250,700);
        setResizable(false);
        jTable1.setRowHeight(30);

          try
       {
           Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
           conn=DriverManager.getConnection("jdbc:odbc:library_management");
           System.out.println("connected");
           stmt=conn.createStatement();
          rs=stmt.executeQuery("select * from book_issue");
          while(rs.next())
          {
              
              String student_id=rs.getString("student_id");
              if(student_id.equals(id))
              {
                      int c=0;
              arr[c]=rs.getString("book_id");
              c++;
              arr[c]=rs.getString("book_name");
              c++;
              arr[c]=rs.getString("author_name");
              c++;
              arr[c]=rs.getString("issue_date");
             c++;

            arr[c]=rs.getString("expiry_date");



            int d1=0,m1=0;
               GregorianCalendar g=new  GregorianCalendar();
   String ar1=(  g.get(Calendar.DATE)+"/"+g.get(Calendar.MONTH)+"/"+g.get(Calendar.YEAR));
            System.out.println(ar1);
  int length1=ar1.length();
   String year1=ar1.substring(length1-4,length1);
    int y1=Integer.parseInt(year1);
      System.out.println(y1);
      for(int i=0;i<length1-5;i++)
            {
                char ch1;

                ch1=ar1.charAt(i);
                if(ch1=='/')
                {
                    String day1=ar1.substring(0,i);
                    d1=Integer.parseInt(day1);
                   System.out.println(d1);
                    String month1=ar1.substring(i+1,length1-5);
                      m1=Integer.parseInt(month1);
                       System.out.println(m1);
                }
      }


            float f=0;

             String ar=arr[c];

            int length=ar.length();

            String year=ar.substring(length-4,length);
          int y=Integer.parseInt(year);


            for(int i=0;i<length-5;i++)
            {
                char ch;

                ch=ar.charAt(i);
                if(ch=='/')
                {
                    String day=ar.substring(0,i);
                   int d=Integer.parseInt(day);
                    String month=ar.substring(i+1,length-5);
                     int m=Integer.parseInt(month);
                    try
{
      Calendar calendar1=Calendar.getInstance();
       Calendar calendar2=Calendar.getInstance();
       calendar1.set(y,m,d);
        calendar2.set(y1,m1,d1);
       long miliSecondForDate1=calendar1.getTimeInMillis();
        System.out.println(miliSecondForDate1);
          long miliSecondForDate2=calendar2.getTimeInMillis();
        long diffInMilis=miliSecondForDate2-miliSecondForDate1;
         System.out.println(diffInMilis);
       long diffInDays=diffInMilis/(24*60*60*1000);
        System.out.println(diffInDays);


        f=2*diffInDays;
        if(f<0)
            f=0;

      System.out.println(f);


        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
                }
            }


            c++;
            arr[c]=""+f;

                 DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
        model.addRow(arr);

              }



          }

}

     catch(SQLException se)
     {
System.out.println(se);
     }

     catch(ClassNotFoundException ce)
     {
System.out.println(ce);
     }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        jTable1.setFont(new java.awt.Font("Traditional Arabic", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book-id", "Book Name", "Author Name", "Issue Date", "Expiry Date", "Fine"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(110, 80, 1080, 500);

        jLabel2.setFont(new java.awt.Font("Traditional Arabic", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Issued Books");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(110, 0, 320, 60);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/dark_plain_1280x960.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1510, 790);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new view_issued_books("3").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

}
